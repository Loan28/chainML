syntax = "proto3";

package chainML;

option java_package = "com.chainML.pb";
option java_multiple_files = true;

message UploadFileRequest {
  oneof data {
    FileInfo info = 1;
    bytes chunk_data = 2;
  };
  TypeFile type_file = 3;
  FileName file_name = 4;
}
message UploadFileResponse {
  string id = 1;
  uint32 size = 2;
}

message DataChunk {
  bytes data = 1;
  int32 size = 2;
}

message FileInfo {
  string image_type = 2;
}

message Model{
  string modelName = 1;
}

message TypeFile{
  string typefile = 1;
}

message  FileName{
  string filename = 1;
}

message Order {
  string nextDevice = 2;
}

message replyOrder {
  string reply = 1;
}

message OrderRequest {
  string name = 1;
}
message OrderReply {
  string message = 1;
}
message DefineControllerRequest {
  string ipController = 1;
  int32 portController = 2;
}
message DefineModelLabelRequest {
  string model = 1;
  string label = 2;
  string type = 3;
  string condition = 4;
  string condition2 = 5;
  string action = 6;
  string action2 = 7;
  string applicationType = 8;
  string location = 9;
  string ipConroller = 10;
  int32  portController = 11;
}
message DefineModelLabelReply {
  string message = 1;
}
message DefineControllerReply {
  string message = 1;
}

message TimeRequest {
  double time = 1;
  string device = 2;
}
message TimeReply {
  string name = 1;
}
service chainMLService {
  rpc sendUploadTime (TimeRequest) returns (TimeReply) {}
  rpc sendExecTime (TimeRequest) returns (TimeReply) {}
  rpc DefineOrder (OrderRequest) returns (OrderReply) {}
  rpc DefineModelLabel (DefineModelLabelRequest) returns (DefineModelLabelReply){}
  rpc DefineController (DefineControllerRequest) returns (DefineControllerReply) {}
  rpc getSpecs (OrderRequest) returns (OrderReply) {}
  rpc UploadFile(stream UploadFileRequest) returns (UploadFileResponse) {};
}